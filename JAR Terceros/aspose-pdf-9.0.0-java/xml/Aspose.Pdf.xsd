<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="Aspose.Pdf" targetNamespace="Aspose.Pdf" elementFormDefault="qualified">
  <xsd:annotation>
    <xsd:documentation xml:lang="en">
			Config schema for Aspose.Pdf.
			Copyright 2002-2009 Aspose Pty Ltd. All rights reserved.
		</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Pdf" type="PdfType">
    <xsd:annotation>
      <xsd:documentation>Represents the Pdf document.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="PdfType">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Section" type="SectionType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a section in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ListSection" type="ListSectionType" minOccurs="0" maxOccurs="3">
        <xsd:annotation>
          <xsd:documentation>Represents a ListSection in a Pdf.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Watermark" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a custom watermark of the Pdf.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocumentAttachment" type="DocumentAttachmentType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a document level attachment.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="JavaScript" type="JavaScriptType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a document level JavaScript.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="XmpMetadata" type="XmpMetadataType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the XMP metadata to be added into the document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <!--Added by Tommy 20080527 for PDFNET-5009 bookmarks at specific points-->
      <xsd:element name="Bookmarks" type="BookmarksType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the custom bookmarks to be created in the document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--Added by emil 20080827 for PDFNET-4954-->
    <xsd:attribute name="IsAutoHyphenated" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text in the pdf file is hyphenated automatically.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="HyphenationDictionaryPath" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string specifies the path of customer's hyphenation dictionary.This attribute must be set and valid when the "IsAutoHyphenated" attribute is set to true,otherwise, the text is hyphenated automatically.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="HyphenationZoneWidth" type="xsd:float" use="optional" default="12">
      <xsd:annotation>
        <xsd:documentation>A float value specifies the width of hyphenation area. Default value is 12 points. This attribute is valid only when the "IsAutoHyphenated" attribute is set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ConsecutiveHyphensLimits" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value specifies the consecutive hyphens limits in a pdf file. Default value is zero that means no limits. This attribute is valid only when the "IsAutoHyphenated" attribute is set to be true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20080827 for PDFNET-4954-->
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the pdf.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".But It can be overloaded by attribute BackgroundColor set in section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultFontName" type="xsd:string" use="optional" default="Times-Roman">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default font name. When font name is not set or the font is not found, this font will be used. The default value is "Times-Roman".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--Added by liho 2008-12-08 for LinearizedPdf -->
    <xsd:attribute name="Linearized" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>a bool value that indicates if the document needs to be linearized (optimization for web access) .</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CultureInfo" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the culture information of the xml. For example, CultureInfo="en-US".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLandscape" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>a bool value that indicates whether the page orientation is landscape. The default is false, which means portrait.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TabStopPosition" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the tab stop position. Default value is 36 points (0.5inch). The default unit is point, but cm and inch are also  supported. For example, TabStopPosition="2cm" or TabStopPosition="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'. This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CompressionLevel" type="xsd:nonNegativeInteger" use="optional" default="6">
      <xsd:annotation>
        <xsd:documentation>An non negative integer that indicates the compression level. It can be between 0 (the least compression) and 9 (the most compression) and the default value is 6.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional" default="Times-Roman">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be choosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsWatermarkOnTop" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the watermarks are on the top of the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTruetypeFontMapCached" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that whether truetype font map be cached on disk. Truetype font map is a font name to font file name map which is used when using unicode. If unicode is used, setting this property to true can make your application run fast.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontMapPath" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the path of the truetype font map file. This attribute is valid only when the "IsTruetypeFontMapCatched" attribute is set to true. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsImagesInXmlDeleteNeeded" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether images used in XML be deleted when the PDF document is generated. This property is used when integration with Aspose.Word. When converting Word document to PDF,Aspose.Word will save images in Word document as file and add the file name into XML. If this property is set to true,Aspose.Pdf will delete these image files used in XML.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsImageNotFoundErrorIgnored" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the "image not found" error is ignored or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontNotFoundExceptionThrown" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a bool value that indicates whether throw out exception when font is not found. The default value is false. In this case, if user specified font is not found, default font works..</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsPageNumberRestarted" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the page number is restarted in new section. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsPageNumberForDocument" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether total page number is count for whole document. If this property is set to true, the "$P" symbol will be replaced by the total page number of the document. Otherwise "$P" will be replaced with the total page number of all	sections that were not restarted ("IsPageNumberRestarted" is set to true). </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsCoreFontUsed" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether PDF core fonts are used. Default is true. If this property is set to false, PDF core fonts will be ignored and all font will be used as TrueType font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsXmlSchemaCheckedOnBind" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates that indicates whether the error is ignored when unknown elements or attributes are used in xml file. Default is true. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRightToLeft" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether whether the text or heading appear in the pdf is right-to-left aligned. If it is true, all the texts and headings will be processed as right-to-left language previously. If text or heading don't contain any right-to-left language character, they will be processed as usual( left-to-right). This attribute is used for right-to-left aligned language such as Arabic and Hebrew. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsWidowOrphanControlEnabled" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether whether that indicates whether the Widow/Orphan control is enabled. Default is true. If it is true, Widow/Orphan control is enabled and Widows/orphans themselves are eliminated (disabled).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRTLSegmentMode" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text or heading is processed in segment mode. If it is true(default), segment in text will be processed one by one. If false, all segments in text. text will be put together, reorder in Arabic rule. We recommend set it true when rendering rtl and non-rtl mixed texts.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsAutoFontAdjusted" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether allow to adjust fonts automatically. Sometimes, users may assign a font to a Segment paragraph which doesn't support every character appear in the Segment. If it is true(default is false), it will assign proper font to Segment paragraph according to its contents in this case.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="12">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional" default="host">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name. For 8-bit fonts, encoding should be "builtin"(Original encoding used by non-text or non-Latin text fonts) , or "winansi"(Windows code page 1252), or the name of an external encoding("cp1251" for example). The default value is "winansi". </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text alignment mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--Added by zyw 2008-9-4 for PDFA -->
    <xsd:attribute name="Conformance" type="PdfConformanceTypeEnum" use="optional" default="None">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the conformance in the PDF. The default value is PdfConformance.None.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextColor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example, "Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ButtonColor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the button. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FirstLineIndent" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the indent of the first line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSpaced" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is spaced or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelWidth" type="xsd:string" use="optional" default="30">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the heading label.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineSpacing" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the spacing between two text lines. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DestinationType" type="DestinationTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the destination type.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="OpenType" type="PdfOpenTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the document open type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--added for PDFNET-4018 by Emil.Hu 2008-4-14-->
    <xsd:attribute name="TimeOutOfFileWebRequest" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer that indicates the length of the time (ms) until the request times out for the web images.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--end of added for PDFNET-4018 by Emil.Hu 2008-4-14-->
    <xsd:attribute name="Author" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the author of the Pdf document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Title" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the title of the Pdf document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Creator" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the creator of the Pdf document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Producer" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the producer of the Pdf document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Keywords" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates key words of the Pdf document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Subject" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the subject of the Pdf document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageTransitionType" type="PageTransitionTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the pdf document page transition type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageDuration" type="xsd:nonNegativeInteger" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the duration in seconds for the current page. This property is only used when using auto advancing in presentation mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CropBox" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Four float number separated by blank that indicates the crop box of the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BleedBox" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Four float number separated by blank that indicates the bleed box of the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ArtBox" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Four float number separated by blank that indicates the art box of the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TrimBox" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Four float number separated by blank that indicates the trim box of the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Is128BitsEncrypted" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the Pdf documents will be 128 bits or 40 bits encrypted. Default is false, 40 bits encrypted.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="UserPassword" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the user password used in pdf encryption.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MasterPassword" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the master password used in pdf encryption.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDefaultAllAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all permissions are set to allowed as default. Default value is true. If this property is set to false, then all permissions are set to NOT allowed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsPrintingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether printing is allowed.To fully disable Pdf documents to be printable both "IsPrintingAllowed" and "IsDegradedPrintingAllowed" should be false.  </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsContentsModifyingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether modifying contents is allowed. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsCopyingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether copying or otherwise extracting text and graphics from the document is allowed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsAnnotationsModifyingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether adding or modifying text annotations is allowed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFormFillingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether filling in forms and  signing the document is allowed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsScreenReadersAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether screen readers are allowed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDocumentAssemblyingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether assembling the document is allowed. This includes inserting, rotating, or deleting pages and creating navigation elements such as bookmarks or thumbnail images.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDegradedPrintingAllowed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether printing in low resolution is allowed.To fully disable Pdf documents to be printable both "IsPrintingAllowed" and "IsDegradedPrintingAllowed" should be false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBookmarked" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the pdf document is bookmarked .If this property is set to true, Aspose.Pdf will create bookmarks for all the headings in the PDF if the relative property BookMarkLevel is not set. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BookMarkLevel" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A non-negative integer value that indicates how many levels of headings of the pdf document is to be bookmarked. Only when the relative property IsBookmarked is set as true, this property is valid, which specifies the max level of headings to be tagged as bookmarks.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageNumberFormatType" type="PageNumberFormatEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the page number format type.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SectionType">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="PageBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the page border of the section.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a text paragraph in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Graph" type="GraphType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a graph Paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a table Paragraph in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a image paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Attachment" type="AttachmentType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a attachment paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FormField" type="FormFieldType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a formfield paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FloatingBox" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a floating box paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Canvas" type="CanvasType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a canvas paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Header" type="HeaderFooterType" minOccurs="0" maxOccurs="4">
        <xsd:annotation>
          <xsd:documentation>Represents  header  of a page in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Footer" type="HeaderFooterType" minOccurs="0" maxOccurs="4">
        <xsd:annotation>
          <xsd:documentation>Represents  footer of a page in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Heading" type="HeadingType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a heading in Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--added by emil for PDFNET-4954 hyphen supports 20080828-->
    <xsd:attribute name="IsAutoHyphenated" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text in the section is hyphenated automatically. Default value is true. This attribute is valid only when the attribute named "IsAutoHyphenated" in Pdf is set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--end of added by emil for PDFNET-4954 hyphen supports 20080828-->
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the section. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180" It overloads the BackgroundColor set in Pdf. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ColumnCount" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the number of columns in each page in the section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ColumnWidths" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that contains the width of columns in each page in the section. The value of each column should be separated by blank. The default unit is point, but cm and inch are also supported. For example,"120 2.5cm 1.5inch". The max column number is 16. If this property is not set, column width will be calculated automatically according to column count and column spacing.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ColumnSpacing" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that contains the spacing between columns in each page in the section. The value of each spacing should be separated by blank.The default unit is point,but cm and inch are also supported.For example,"120 2.5cm 1.5inch". If this property is not set, default value 20 points will be used for each spacing.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="HasColumnLine" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical line between columns need to been added.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageRotatingAngle" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the number of degrees by which the page should be rotated clockwise when displayed or printed. The value must be a multiple of 90. Default value is 0.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageSize" type="PageSizeTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page size. The default unit is point,but cm and inch are also  supported. For example, PageWidth="20cm" or PageWidth="5inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page width. The default unit is point, but cm and inch are also  supported. For example, PageWidth="20cm" or PageWidth="5inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageHeight" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page height. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--modified by alex for MirrorMargin at 2009-5-31-->
    <xsd:attribute name="PageGutterSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page gutter size. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageGutterPlacement" type="GutterPlacementTypeEnum" use="optional" default="None">
		<xsd:annotation>
			<xsd:documentation>A string value (culture-neutral format) that indicates the page gutter placement type. It can be set to right,left,top,inner,outer and none. The default is none.</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
    <xsd:attribute name="PageMarginTop" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page top margin. The default unit is point,but cm and inch are also  supported. For example, PageMarginTop="2cm" or PageMarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginBottom" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page bottom margin. The default unit is point,but cm and inch are also  supported. For example, PageMarginBottom="2cm" or PageMarginBottom="2inch". </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginLeft" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page left margin. The default unit is point, but cm and inch are also  supported. For example,
PageMarginLeft="2cm" or PageMarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginRight" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page right margin. The default unit is point,but cm and inch are also  supported. For example, PageMarginRight="2cm" or PageMarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginInner" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page inner margin.  In case of mirror margins we can use PageMarginInner and PageMarginOuter instead of  PageMarginLeft and PageMarginRight.The default unit is point,but cm and inch are also  supported. For example, PageMarginInner="2cm" or PageMarginInner="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginOuter" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page outer margin.  In case of mirror margins we can use PageMarginInner and PageMarginOuter instead of  PageMarginLeft and PageMarginRight.The default unit is point,but cm and inch are also  supported. For example, PageMarginInner="2cm" or PageMarginInner="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginInner" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the left page border and the left page edge on even page or between the right page border and the right page edge on odd page. In case of mirror margins we can use PageBorderMarginInner and PageBorderMarginOuter instead of  PageBorderMarginLeft and PageBorderMarginRight. The default value is 0. The default unit is point, but cm and inch are also  supported. For example, PageBorderMarginInner="2cm" or PageBorderMarginInner="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginOuter" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the right page border and the right page edge on even page or between the left page border and the left page edge on odd page. In case of mirror margins we can use PageBorderMarginInner and PageBorderMarginOuter instead of  PageBorderMarginLeft and PageBorderMarginRight. The default value is 0. The default unit is point, but cm and inch are also  supported. For example, PageBorderMarginOuter="2cm" or PageBorderMarginOuter="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--end of modified by alex for MirrorMargin at 2009-5-31-->
    <xsd:attribute name="PageBorderMarginTop" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the top page border and the top page edge.The default value is half of the page top margin. The default unit is point, but cm and inch are also  supported. For example, PageBorderMarginTop="2cm" or PageBorderMarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginBottom" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the bottom page border and the bottom page edge. The default value is half of the page bottom margin. The default unit is point, but cm and inch are also  supported. For example, PageBorderMarginBottom="2cm" or PageBorderMarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginLeft" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the left page border and the left page edge.The default value is half of the page left margin. The default unit is point,but cm and inch are also  supported. For example, PageBorderMarginLeft="2cm" or PageBorderMarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginRight" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the right page border and the right page edge. The default value is half of the page right margin. The default unit is point,but cm and inch are also  supported. For example, PageBorderMarginRight="2cm" or PageBorderMarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name.When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be choosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this section is disabled. The default value is false. If this property is set to true, this section will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsPageNumberRestarted" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the page number be restarted at this section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsWidowOrphanControlEnabled" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether whether that indicates whether the Widow/Orphan control is enabled. Default is true.If it is true, Widow/Orphan control is enabled and Widows/orphans themselves are eliminated (disabled). </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="StartingPageNumber" type="xsd:positiveInteger" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates the starting page number of the section. Default is 1.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsNewColumn" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the section starts at new column.Default is true. If this property is set to false, please make sure the section has the same column setting as the former section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsNewPage" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this section starts a new page. The default value is true. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text alignment mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="GraphColor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the graph. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width of the graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash in graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FirstLineIndent" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An int value that indicates the indent of the first line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSpaced" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is spaced or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineSpacing" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the spacing between two text lines.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundImageFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background image file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundImageType" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the type of the background image.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundImageFixedWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the fixed width of the background image. If this property is not set, the real image size will be used as page size.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBackgroundImageBlackWhite" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a bool value that indicates whether the background image is forced to be black-and-white. If black-and-white TIFF image of CCITT subformat is used, this property must be set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLandscape" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>a bool value that indicates whether the page orientation is landscape. The default is false, which means portrait.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="HeaderFooterType">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a text paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Graph" type="GraphType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a graph paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a image paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a table paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FormField" type="FormFieldType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a formfield paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FloatingBox" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a floating box paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Canvas" type="CanvasType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a canvas paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="Type" type="HeaderFooterTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the type of the HeadFooter. It can be "odd" or "even". If this attribute is not set, the HeadFooter will appear in both odd and even page. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DistanceFromEdge" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the distance from the header or footer's edge. The default unit is point, but cm and inch are also  supported. For example, DistanceFromEdge="2cm" or DistanceFromEdge="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the bottom margin of the header or footer.The default unit is point,but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the bottom margin of the header or footer.The default unit is point,but cm and inch are also  supported. For example, MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left margin of the header or footer.The default unit is point,but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the right margin of the header or footer.The default unit is point, but cm and inch are also  supported. For example,  MarginRight="2cm" or  MarginRight="2inch". </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional" default="Times-Roman">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstPageOnly" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the header or footer be printed on first page only. The default value is false. If this property is set to true, the IsSubsequentPagesOnly property should be false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLastPageOnly" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the header or footer be printed on last page only. The default value is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSubsequentPagesOnly" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the header or footer be printed not on first page but on subsequent pages only. The default value is false. If this property is set to true, the IsFirstPageOnly property should be false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="12">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional" default="host">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text alignment mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextColor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="GraphColor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the graph. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width of the graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash in graph. The values number of  ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="TabStopType" mixed="true">
    <xsd:attribute name="Position" type="xsd:float" use="required">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates tab stop position.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LeaderType" type="TabLeaderTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the custom tab leader type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="AlignmentType" type="TabAlignmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the custom tab alignment type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="TabStopsType">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="TabStop" type="TabStopType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the tab stop positions in this paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="TextType">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="TextBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the text borders.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="TabStops" type="TabStopsType">
        <xsd:annotation>
          <xsd:documentation>Represents the tab stop positions in this paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Segment" type="SegmentType">
        <xsd:annotation>
          <xsd:documentation>Represents a segment in a Text paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>   
    <!--Added by Emil 2009-05-15 for PDFNET-3211-->
    <xsd:attribute name="Opacity" type="xsd:float" use="optional" default="1.0">
      <xsd:annotation>
        <xsd:documentation>
          A float value (culture-neutral format) between 0.0 and 1.0 that indicates the opacity of the text. The default value is 1.0.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by Emil 2009-05-15 for PDFNET-3211-->
    <!--Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="IsNeedRepeating" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Gets or sets a bool value that indicates whether the text need to be repeated when the pdf is broken across pages. Default value is false. The attribute is only valid when the text itself and the object its ReferenceParagraphID referred to both are included in RepeatingRows.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20081022 for PDFNET-6190-->
    <!--added by emil for PDFNET-4954 20080828-->
    <xsd:attribute name="IsAutoHyphenated" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is hyphenated automatically. Default value is true. This attribute is valid only when the attribute named "IsAutoHyphenated" in Pdf and in Section both are set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--end of added by emil PDFNET-4954 20080828-->
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRightToLeft" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the chars in right-to-left aligned. This attribute is used for right-to-left aligned language such as Arabic and Hebrew.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsWidowOrphanControlEnabled" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether whether that indicates whether the Widow/Orphan control is enabled. Default is true.If it is true, Widow/Orphan control is enabled and Widows/orphans themselves are eliminated (disabled). </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsHtmlTagSupported" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the HTML tags in text is supported. Default is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of text paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph is disabled. The default value is false. If this property is set to true, this paragraph will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available  at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.
This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text alignment mode. It can be "Left","Center","Right","Justify" or "FullJustify".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsAlignedByWord" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is aligned by word.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the text. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin. The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin. The default unit is point, but cm and inch are also  supported. For example, MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin. The default unit is point, but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin. The default unit is point, but cm and inch are also  supported. For example, MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FirstLineIndent" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the indent of the first line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSpaced" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is spaced or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraph" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraphInColumn" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a column.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptTogether" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all lines in the paragraph are to remain on the same page. Default is false. This property only affects paragraphs in section (but ont in table).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOnOddPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph be shown in odd page only. This property used for duplex Printing. If you want to print a paragraph in a new odd page in duplex Printing,you can set "IsFirstParagraph = true" and "IsOnOddPage = true".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineSpacing" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the spacing between two text lines. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RotatingAngle" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the number of degrees by which the text should be rotated anticlockwise when displayed or printed. Default value is 0.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="InlineRadioButtonCheckedIndex" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A non-negative integer number that indicates the index of the inline radiobutton that has been checked.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="InlineRadioButtonFieldName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of inlineRadioButton's the field. When use inlineRadioButton,this must be set a unique name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="InlineRadioButtonBackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the inline radio button background. Only RGB color is supported. The string can be the name of the color or the RGB value. R,G and B should be a value between 0 and 255. For example "Red" or "255 0 0".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="InlineRadioButtonColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the inline radio button. Only RGB color is supported. The string can be the name of the color or the RGB value. R,G and B should be a value between 0 and 255. For example "Red" or "255 0 0".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="HeadingType">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="TextBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the text borders.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Segment" type="SegmentType">
        <xsd:annotation>
          <xsd:documentation>Represents a segment in a heading paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="TabStops" type="TabStopsType">
        <xsd:annotation>
          <xsd:documentation>Represents the tab stop positions in this paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ImageLabel" type="ImageType">
        <xsd:annotation>
          <xsd:documentation>Represents an image that is used as label. If ImageLabel is not null, the ImageLabel substitutes for number heading. The size of the ImageLabel will be adjusted following the Segment.TextInfo.FontSize. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="IsNeedRepeating" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Gets or sets a bool value that indicates whether the heading need to be repeated when the pdf is broken across pages. Default value is false. The attribute is only valid when the heading itself and the object its ReferenceParagraphID referred to both are included in RepeatingRows.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20081022 for PDFNET-6190-->
    <!--added by emil for PDFNET-4954 20080828-->
    <xsd:attribute name="IsAutoHyphenated" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text in the heading is hyphenated automatically.Default value is true. This attribute is valid only when the attribute named "IsAutoHyphenated" in Pdf and in Section both are set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--end of added by emil PDFNET-4954 20080828-->
    <xsd:attribute name="IsRightToLeft" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the chars in right-to-left aligned. This attribute is used for right-to-left aligned language such as Arabic and Hebrew.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsWidowOrphanControlEnabled" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether whether that indicates whether the Widow/Orphan control is enabled. Default is true. If it is true, Widow/Orphan control is enabled and Widows/orphans themselves are eliminated (disabled).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineSpacing" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the spacing between two text lines. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of text paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Level" type="xsd:positiveInteger" use="required">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the level of the heading.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="StartNumber" type="xsd:positiveInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>Gets or sets an integer number that indicates the start number of this heading when using auto numbering.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelWidth" type="xsd:string" use="optional" default="30">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the label of the heading. The default unit is point, but cm and inch are also  supported. For example, LabelWidth="2cm" or LabelWidth="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="HeadingType" type="HeadingTypeEnum" use="optional" default="Arab">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the number style of the heading.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="UserLabel" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the caption label. Set this property to 'bullet1','bullet2'...'bullet7' to use system-defined bullet. To use user defined lebel, set the BulletFontName to "Symbol" or "ZapfDingbats" and set this property to the char value of the bullet symbol. For example, UserLabel="44" and  BulletFontName="ZapfDingbats".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelPattern" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the heading pattern in the "ch(s)%ch(s)" form, ch(s) can be none ,an ASCII or a combination of ASCIIs, % stands for the heading number.  For example, "(%)" means "(1.1)" if here % equals 1.1.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BulletFontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font name for bullet. "Symbol" and "ZapfDingbats" are supported.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BulletAlignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the alignment type of Bullet/Label. Default value is Left.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BulletColor" type="xsd:string" use="optional" default="Black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the Bullet/Label. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelAlignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the alignment type of Bullet/Label. Default value is Left.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelColor" type="xsd:string" use="optional" default="Black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the Bullet/Label. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLabelBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the bullet is bold. Default is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLabelItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the bullet is italic. Default is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLabelUnderline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the label is underline. Default is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelFontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font name of the label.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LabelFontSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the font size of label.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBulletUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font for bullet/Label is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLabelUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font for bullet/Label is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BulletTTFFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name for the bullet. This attribute is only needed when using truetype font with unicode. If your truetype font has been installed in your system, you can use truetype font with unicode without this property. But using this property will greatly improve the performance.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph is disabled. The default value is false. If this property is set to true, this paragraph will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsAutoSequence" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the number of the heading is in an automatical sequence.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsPrefixed" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a bool value that indicates if the prefix of the number is shown when using auto sequence. For example, for a label "1.2.5", if this property is set to false, the label will be "5".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font with unicode. If your truetype font has been installed in your system, you can use truetype font with unicode without this property. But using this property will greatly improve the performance.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text alignment mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ZIndex" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the Z-order of the text. A text with larger ZIndex will be placed over paragraphs with smaller ZIndex. ZIndex can be negative. Text with negative ZIndex will be placed behind the text in the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the heading. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin. The default unit is point, but cm and inch are also  supported. For example, MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin.The default unit is point, but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin. The default unit is point, but cm and inch are also  supported. For example, MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FirstLineIndent" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the indent of the first line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSpaced" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is spaced or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraph" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraphInColumn" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a column.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptTogether" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all lines in the paragraph are to remain on the same page. Default is false. This property only affects paragraphs in section (but ont in table).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOnOddPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph be shown in odd page only. This property used for duplex Printing. If you want to print a paragraph in a new odd page in duplex Printing, you can set "IsFirstParagraph = true" and "IsOnOddPage = true".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsInList" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value indicates whether the heading is added to the Table of Contents.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="GraphType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="GraphBorder" type="BorderType">
        <xsd:annotation>
          <xsd:documentation>Represents the graph borders.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Line" type="LineType">
        <xsd:annotation>
          <xsd:documentation>Represents a line shape in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Rectangle" type="RectangleType">
        <xsd:annotation>
          <xsd:documentation>Represents a rectangle shape in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Ellipse" type="RectangleType">
        <xsd:annotation>
          <xsd:documentation>Represents a ellipse shape in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Circle" type="CircleType">
        <xsd:annotation>
          <xsd:documentation>Represents a circle shape in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Arc" type="ArcType">
        <xsd:annotation>
          <xsd:documentation>Represents a arc shape in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Curve" type="CurveType">
        <xsd:annotation>
          <xsd:documentation>Represents a curve shape in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Title" type="GraphTitleType">
        <xsd:annotation>
          <xsd:documentation>Represents the graph title.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Note" type="GraphNoteType">
        <xsd:annotation>
          <xsd:documentation>Represents a note in a graph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="IsNeedRepeating" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Gets or sets a bool value that indicates whether the graph need to be repeated when the pdf is broken across pages. Default value is false. The attribute is only valid when the graph itself and the object its ReferenceParagraphID referred to both are included in RepeatingRows.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="ZIndex" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>A int value that indicates the Z-order of the graph. A graph with larger ZIndex will be placed over the graph with smaller ZIndex. ZIndex can be negative. Graph with negative ZIndex will be placed behind the text in the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Width" type="xsd:float" use="required">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the graph width. The default unit is point, but cm and inch are also supported. For example, GraphWidth="10cm" or GraphWidth="5inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Height" type="xsd:float" use="required">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the graph height. The default unit is point, but cm and inch are also supported. For example, GraphWidth="10cm" or GraphWidth="5inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge.The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin.The default unit is point, but cm and inch are also  supported. For example, MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin. The default unit is point, but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin. The default unit is point, but cm and inch are also  supported. For example, MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text alignment mode. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width of the graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the graph. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph is disabled. The default value is false. If this property is set to true, this paragraph will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="fillcolor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the fill color of the graph. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineJoinMode" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value between 0 and 2 that indicates the line join mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineCapMode" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value between 0 and 2 that indicates the line cap mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Flatness" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A positive integer value that indicates the flatness.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MiterLimit" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value greater than or equal to 1 that indicates the miter limit.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="OriginPos" type="xsd:string" use="optional" default="0 0">
      <xsd:annotation>
        <xsd:documentation>Two float value separated by blank that indicates the coordinate of the new origin when transforming a coordinate system.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ScaleRate" type="xsd:string" use="optional" default="1 1">
      <xsd:annotation>
        <xsd:documentation>Two float value separated by blank that indicates the scale rate in x and y coordinate.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="SkewAngle" type="xsd:string" use="optional" default="0 0">
      <xsd:annotation>
        <xsd:documentation>Two float value separated by blank that indicates the skew angle in x and y coordinate. The unit is degree. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RotationAngle" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the rotation angle of the coordinate system when transforming a coordinate system. The unit is degree.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FillRule" type="xsd:string" use="optional" default="winding">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the graph fill rule. It can be "winding" or "evenodd".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraph" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraphInColumn" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a column.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptTogether" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all lines in the paragraph are to remain on the same page. Default is false. This property only affects paragraphs in section (but ont in table).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOnOddPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph be shown in odd page only. This property used for duplex Printing. If you want to print a paragraph in a new odd page in duplex Printing,you can set "IsFirstParagraph = true" and "IsOnOddPage = true".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkType" type="HyperlinkTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the hyperlink type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TargetID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link target ID.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkPageNumber" type="xsd:positiveInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the page number of the link page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Url" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link url.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DestinationType" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link destination type. It can be "Retain","FitPage","FitWidth","FitHeight","FitBox".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsInList" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value indicates whether the graph is added to List of Figures.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MenuItems" type="MenuItemTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the menu item type when setting ExcuteMenuItem link actions. If there are more than one actions, separate them by a blank like 'ViewZoomFitWidth ViewGoToPage'.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WebUrl" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the web URL when setting OpenWebLink link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the file name when setting OpenFile link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--Added by Tommy for PDFNET-5010 LinkAction 20080514-->
  </xsd:complexType>
  <xsd:complexType name="TableType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Row" type="RowType">
        <xsd:annotation>
          <xsd:documentation>Represent a row in a table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Border" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the border of the table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DefaultCellBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the default cell border of the table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="FromRSItemType" type="RSItemTypeEnum" use="optional" default="Table">
      <xsd:annotation>
        <xsd:documentation>A string that indicates which type of reporting service items is mapped to this table. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultColumnWidth" type="xsd:string" use="optional" default="100">
      <xsd:annotation>
        <xsd:documentation>Represents the default column width in the table. The default unit is point, but cm and inch are also supported. For example,FitWidth="2cm" or FitWidth="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="IsNeedRepeating" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Gets or sets a bool value that indicates whether the table need to be repeated when the pdf is broken across pages. Default value is false. The attribute is only valid when the table itself and the object its ReferenceParagraphID referred to both are included in RepeatingRows.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="VerticalAlignment" type="VerticalAlignmentTypeEnum" use="optional" default="Top">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical alignment type of all paragraphs in the cell of this table. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ColumnAdjustment" type="ColumnAdjustmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates adjustment types for determining the column widths of table.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin. The default unit is point, but cm and inch are also  supported. For example, MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin.The default unit is point, but cm and inch are also  supported. For example,MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin.The default unit is point,but cm and inch are also  supported. For example,MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this table is disabled. The default value is false. If this property is set to true, this table will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSingleHeaderShown" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether table with only a header(IsFirstRowRepeated=true and Rows. Count=1) be shown. The default value is true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsEmptyRowAtBottomShown" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the empty row at the bottom of the table be shown in the PDF. When a table is larger and can't be display in one page, the table will be split into more tables. Sometimes the broken table has a empty row at the bottom. This property is used to control the displaying of the empty row. The default value is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultCellPaddingTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the default cell top padding. The default unit is point, but cm and inch are also  supported. For example,DefaultCellPaddingTop="2cm" or DefaultCellPaddingTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultCellPaddingBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the default cell bottom padding. The default unit is point, but cm and inch are also  supported. For example, DefaultCellPaddingBottom="2cm" or DefaultCellPaddingBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultCellPaddingLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the default cell left padding.The default unit is point, but cm and inch are also  supported. For example,DefaultCellPaddingLeft="2cm" or DefaultCellPaddingLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultCellPaddingRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the default cell right padding. The default unit is point, but cm and inch are also  supported. For example,DefaultCellPaddingRight="2cm" or DefaultCellPaddingRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default text font name in cells. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default truetype font file name in cells. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default name of custom AFM font file in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default name of custom PFM font file in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default name of custom font outline file in cells. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default name of font encoding file in cells. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold in cells. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic in cells. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the default size of font in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default font encoding name in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextAlignment" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default text alignment mode in cells. It can be "Left","Center","Right","Justify" or "FullJustify".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout in cells.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates default space between charcters in cells. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates default space between words in cells. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the default rendering mode of the text in cells. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default color of the text in cells. For example, "Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default background color of the text in cells. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineSpacing" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the default spacing between two text lines in cells. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the paragraph alignment mode. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ColumnWidths" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that contains the width of each columns in this table. The value of each column should be separated by blank. The default unit is point, but cm and inch are also supported. For example,"120 2.5cm 1.5inch". The max column number is 128. If this property is set, the FitWidth property of the Cell object needs not set.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraph" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraphInColumn" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a column.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptTogether" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all lines in the paragraph are to remain on the same page. Default is false. This property only affects paragraphs in section (but ont in table).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOnOddPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph be shown in odd page only. This property used for duplex Printing. If you want to print a paragraph in a new odd page in duplex Printing,you can set "IsFirstParagraph = true" and "IsOnOddPage = true".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRowBroken" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the row can be broken or not when its table is broken.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBroken" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the table can be broken or not when it span pages.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstRowRepeated" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the first row of table be repeated when table break.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RepeatingRows" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An int value that indicates how many rows from the first row will be repeated when the table is broken across pages.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsInList" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value indicates whether the table is added to List of Tables.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="RowType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Border" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the border of the row.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Cell" type="CellType">
        <xsd:annotation>
          <xsd:documentation>Represents a cell in a row of table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DefaultCellTextInfo" type="TextInfoType" />
      <xsd:element name="DefaultCellBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the default cell border of the row.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="IsInNewPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether to split the table from this row and display the subsequent rows on the next page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the row.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180"</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="VerticalAlignment" type="xsd:string" use="optional" default="Top">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical alignment type of all paragraphs in the cell of this row. It can be "Top", "Center" or "Bottom".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FixedRowHeight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the fixed row height. If the fixed row height is set too small, it will be enlarged automatically. The default unit is point, but cm and inch are also  supported. For example,FixedRowHeight="2cm" or FixedRowHeight="2inch". </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Height" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the row height. The default unit is point, but cm and inch are also  supported. For example,FixedRowHeight="2cm" or FixedRowHeight="2inch". </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFixedRowHeight" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the row's height is fixed. The default value is false. It will be enlarged automatically if the fixed row height is set too small. Otherwise(true), the row's height is fixed and text exceed the height will be cut.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this row is disabled. The default value is false. If this property is set to true, this row will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the row alignment mode. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the row.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBroken" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the row can be broken or not when it span pages.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="CellType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Border" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the border of the cell.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a text paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Graph" type="GraphType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a graph paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a image paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Attachment" type="AttachmentType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a attachment paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FormField" type="FormFieldType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a formfield paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a table paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Heading" type="HeadingType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a heading paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Canvas" type="CanvasType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a canvas paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FloatingBox" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a floating box paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="RotationAngle" type="VerticalRotationAngleTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the rotation angle of the texts in cells. The unit is degree.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the cell alignment mode. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="VerticalAlignment" type="xsd:string" use="optional" default="Top">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical alignment type of all paragraphs in the cell. It can be "Top","Center" or "Bottom".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top padding of the cell.The default unit is point, but cm and inch are also  supported. For example, PaddingTop="2cm" or PaddingTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the bottom padding of the cell.The default unit is point, but cm and inch are also  supported. For example, PaddingBottom="2cm" or PaddingBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left padding of the cell.The default unit is point, but cm and inch are also  supported. For example,PaddingLeft="2cm" or PaddingLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the right padding of the cell.The default unit is point, but cm and inch are also  supported. For example, PaddingRight="2cm" or PaddingRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FitWidth" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Obsolete. Please use Table.ColumnWidths instead. A float value (culture-neutral format) that indicates the fit width of the cell. The default unit is point, but cm and inch are also supported. For example, FitWidth="2cm" or FitWidth="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the cell.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180"</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the cell.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ColumnsSpan" type="xsd:nonNegativeInteger" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates how many columns the cell spans.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RowSpan" type="xsd:nonNegativeInteger" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates how many rows the cell spans.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="BorderType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Left" type="BorderPartType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the left border.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Top" type="BorderPartType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the top border.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Right" type="BorderPartType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the right border.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Bottom" type="BorderPartType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the bottom border.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="All" type="BorderPartType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents all borders.It has the same meaning when using  "Box" and will be replaced by "Box" one year later. So, please use "Box" if possible.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Box" type="BorderPartType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents all borders.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="BorderPartType" mixed="true">
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width of the border.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the border. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash in graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PolyDash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash of border. The values number of ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BorderStyle" type="BorderStyleTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the border style. It can be "Normal" or "Double". More styles will be supported later.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineCapMode" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value between 0 and 2 that indicates the line cap mode of the border.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="JavaScriptType" mixed="true">
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the JavaScript.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SegmentType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="TextBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the borders of the segment.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a image paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Graph" type="GraphType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a graph Paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FormField" type="FormFieldType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a formfield paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RadioButton" type="RadioButtonType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a RadioButton paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Attachment" type="AttachmentType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a attachment paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FootNote" type="FootNoteType" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Represents the footnote of the previous segment.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EndNote" type="EndNoteType" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Represents the endnote of the previous segment.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--added by emil for PDFNET-4954 hyphen supports 20080828-->
    <xsd:attribute name="IsAutoHyphenated" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text in the segment is hyphenated automatically. Default value is true. This attribute is valid only when the attribute named "IsAutoHyphenated" in Pdf, in Section and in Text are set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--end of added by emil for PDFNET-4954 hyphen supports 20080828-->
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRightToLeft" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the chars in right-to-left aligned. This attribute is used for right-to-left aligned language such as Arabic and Hebrew.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.
This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBaseline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is baseline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the segment.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DateFormat" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the date format of the replaceable date symbol($D).It's value can be "d", "D", "f", "F","g", "G","m","r","s","t", "T","u", "U","y","dddd, MMMM dd yyyy","ddd, MMM d \"'\"yy","dddd, MMMM dd","M/yy","dd-MM-yy". The default value is "d". Please refer to example of DateTime.ToString() in MSDN.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsSymbolReplaceable" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether a symbol like $p is replaceable or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkType" type="HyperlinkTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the hyperlink type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TargetID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link target ID.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkPageNumber" type="xsd:positiveInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the page number of the link page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Url" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link url.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DestinationType" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link destination type. It can be "Retain","FitPage","FitWidth","FitHeight","FitBox".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRoman" type="xsd:boolean" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether Roman number is used. The default value is false which means Arabic number.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsCapRoman" type="xsd:boolean" default="false">
      <xsd:annotation>
        <xsd:documentation>a bool value that indicates the Roman page number is Capital or lowercase, the default value is false which means lowercase.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MenuItems" type="MenuItemTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the menu item type when setting ExcuteMenuItem link actions. If there are more than one actions, separate them by a blank like 'ViewZoomFitWidth ViewGoToPage'.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WebUrl" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the web URL when setting OpenWebLink link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the file name when setting OpenFile link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--Added by Tommy for PDFNET-5010 LinkAction 20080514-->
  </xsd:complexType>
  <xsd:complexType name="LineType" mixed="true">
    <xsd:attribute name="Position" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float numbers separated by blank that indicates the coordinates of the line end points.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineJoinMode" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value between 0 and 2 that indicates the line join mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineCapMode" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value between 0 and 2 that indicates the line cap mode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the line. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FillColor" type="xsd:string" use="optional" />
    <xsd:attribute name="IsFilled" type="xsd:boolean" use="optional" default="false" />
    <xsd:attribute name="FillRule" type="xsd:string" use="optional" default="winding" />
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash in graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PolyDash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash in graph. The values number of ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsAddedArrowAtStart" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value indicates whether add arrow at the start of line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsAddedArrowAtEnd" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value indicates whether add arrow at the end of line.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="RectangleType" mixed="true">
    <xsd:attribute name="Position" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Four float numbers separated by blank that indicates the  left, bottom, width and height of the rectangle.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RadiusForRoundCorner" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the radius for the round corner.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the line. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PolyDash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash in graph. The values number of ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FillColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the fill color of the rectangle. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFilled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the rectangle be filled.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FillRule" type="xsd:string" use="optional" default="winding">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the graph fill rule. It can be "winding" or "evenodd".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the rectangle.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="CircleType" mixed="true">
    <xsd:attribute name="CenterPosition" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two float numbers separated by blank that indicates the coordinates of the center position of the circle.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Radius" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the radius of the circle.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the circle. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash in graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PolyDash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash in graph. The values number of ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FillColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the fill color of the circle. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFilled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the circle be filled.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FillRule" type="xsd:string" use="optional" default="winding">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the graph fill rule. It can be "winding" or "evenodd".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the circle.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ArcType" mixed="true">
    <xsd:attribute name="CenterPosition" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two float numbers separated by blank that indicates the coordinates of the center position of the arc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Radius" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the radius of the arc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the arc. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash in graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PolyDash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash in graph. The values number of ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alpha" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the beginning angle degree of the arc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Beta" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the ending angle degree of the arc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the arc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="CurveType" mixed="true">
    <xsd:attribute name="Position" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float numbers separated by blank that indicates the coordinates of the curve control points.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LineWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the line width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the curve. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Dash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two Float values separated by blank that indicates line dash in graph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PolyDash" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Float values separated by blank that indicates line dash in graph. The values number of ploydash should be less than 8.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the curve.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="GraphTitleType" mixed="true">
    <xsd:attribute name="FontName" type="xsd:string" use="optional" default="Times-Roman">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="12">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional" default="host">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64", "gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="GraphNoteType" mixed="true">
    <xsd:attribute name="FontName" type="xsd:string" use="optional" default="Times-Roman">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name.
When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="12">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional" default="host">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Position" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Two float numbers separated by blank that indicates the coordinates of the position of the note.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ImageType" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="ImageBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the image borders.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Title" type="GraphTitleType">
        <xsd:annotation>
          <xsd:documentation>Represents the title of the image.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Note" type="GraphNoteType">
        <xsd:annotation>
          <xsd:documentation>Represents a note of the image.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ImageData">
        <xsd:annotation>
          <xsd:documentation>Represents a Base64 string that indicatesthe image data.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="IsNeedRepeating" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Gets or sets a bool value that indicates whether the image need to be repeated when the pdf is broken across pages. Default value is false. The attribute is only valid when the image itself and the object its ReferenceParagraphID referred to both are included in RepeatingRows.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="Opacity" type="xsd:float" use="optional" default="1.0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) between 0.0 and 1.0 that indicates the opacity of the image. The default value is 1.0.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RotatingAngle" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) between -90 and 90 that indicates the number of degrees by which the image should be rotated anticlockwise when displayed or printed. Default value is 0.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ZIndex" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>A int value that indicates the Z-order of the image. A image with larger ZIndex will be placed over the image with smaller ZIndex. ZIndex can be negative. Image with negative ZIndex will be placed behind the text in the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Width" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the image width. This property is need when using CCITT fax image or image on the web. NOTE: This attribute is now obsolete. Web image can be supported by setting the URL in Image.ImageInfo.File.You need not set this property any more. For CCITT image, please use ImageInfo.CcittImageWidth instead. It will be removed 12 months later since release 3.0.0.0 in April 2006. Aspose apologizes for any inconvenience you may have experienced.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Height" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the image height.This property is need when using CCITT fax image or image on the web. NOTE: This attribute is now obsolete. Web image can be supported by setting the URL in Image.ImageInfo.File. You need not set this property any more. For CCITT image, please use ImageInfo.CcittImageWidth instead. It will be removed 12 months later since release 3.0.0.0 in April 2006. Aspose apologizes for any inconvenience you may have experienced.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CcittImageWidth" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the CCITT image width. CCITT image does not contain size information so the width and height must be set by user.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CcittImageHeight" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the CCITT image height. CCITT image does not contain size information so the width and height must be set by user.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FixWidth" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a float value that indicates the fixed width of the image. If this property is set, the image will be scaled to the fixed width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FixHeight" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a float value that indicates the fixed height of the image. If this property is set, the image will be scaled to the fixed width.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point,but cm and inch are also  supported. For example,MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin.The default unit is point, but cm and inch are also  supported. For example,MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin. The default unit is point, but cm and inch are also  supported. For example,MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin. The default unit is point, but cm and inch are also  supported. For example,MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="AlignmentTypeEnum" use="optional" default="Left">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the paragraph alignment mode. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph is disabled. The default value is false. If this property is set to true, this paragraph will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="File" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the image file name and its path or url of a web image.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DefaultFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the default image file name. If this name is not null, Aspose.Pdf will use this image file when the image specified in File property is not found.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CcittSubFormat" type="CcittSubFormatTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the subformat of CCITT image. It is used for CCITT image only. The value can be Group31D,Group32D and Group4</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBlackWhite" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a bool value that indicates whether the image is forced to be black-and-white. If TIFF image of CCITT subformat is used, this property must be set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsImageNotFoundErrorIgnored" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the "image not found" error be ignored or not.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBlack1" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether black is considered as 1 in an image.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Type" type="ImageTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the image type.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="OpenType" type="ImageOpenTypeEnum" use="optional" default="File">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the image open type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ComponentNumber" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An int value that indicates the color component number of the image. This atribute is need only when using web image.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TiffFrame" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the frame number of TIFF image. This attribute is need only when using multi-pages TIFF image. If this property is set to -1, all frames of the tiff images will be added into the PDF document.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BitsPerComponent" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the color bits per component of the image. This attribute is need only when using web image.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraph" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraphInColumn" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a column.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptTogether" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all lines in the paragraph are to remain on the same page. Default is false. This property only affects paragraphs in section (but ont in table).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOnOddPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph be shown in odd page only. This property used for duplex Printing. If you want to print a paragraph in a new odd page in duplex Printing, you can set "IsFirstParagraph = true" and "IsOnOddPage = true".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ImageScale" type="xsd:float" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the scale of the image when placed into pdf file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkType" type="HyperlinkTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the hyperlink type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TargetID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link target ID.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LinkPageNumber" type="xsd:positiveInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer value that indicates the page number of the link page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Url" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link url.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DestinationType" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the link destination type. It can be "Retain","FitPage","FitWidth","FitHeight","FitBox".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsInList" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value indicates whether the image is added to the ListOfFigures.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MenuItems" type="MenuItemTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the menu item type when setting ExcuteMenuItem link actions. If there are more than one actions, separate them by a blank like 'ViewZoomFitWidth ViewGoToPage'.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WebUrl" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the web URL when setting OpenWebLink link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the file name when setting OpenFile link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsImageFitToRowHeight" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a bool value that indicates whether the image fit to the size of cell which has the only image paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--Added by Tommy for PDFNET-5010 LinkAction 20080514-->
  </xsd:complexType>
  <xsd:complexType name="DocumentAttachmentType" mixed="true">
    <xsd:attribute name="DocumentAttachmentFileName" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the attach file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="DocumentAttachmentFileType" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the MIME type of the attached file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="XmpMetadataType" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="MetadataItem" type="MetadataItemType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents a XMP metadata item.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="MetadataItemType" mixed="true">
    <xsd:attribute name="XmlNamespace" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the XML namespace of the XMP metadata.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Name" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of the XMP metadata item.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Value" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the value of the XMP metadata item.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="AttachmentType" mixed="true">
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteWindowLeft" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the note's popup window. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteWindowTop" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the note's popup window. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteWindowWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the note's popup window. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteWindowHeight" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the height of the note's popup window. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteWindowPositioningType" type="NoteWindowPositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning for note's oppup window. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin.The default unit is point, but cm and inch are also  supported. For example,MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin. The default unit is point, but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin. The default unit is point, but cm and inch are also  supported. For example, MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="AttachmentType" type="AttachmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the attachment type. It can be "File" or "Note".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="AttachedFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the attach file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="AttachedFileType" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the MIME type of the attached file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsDisabled" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph is disabled. The default value is false. If this property is set to true, this paragraph will not be rendered.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FileIconType" type="FileIconTypeEnum" use="optional" default="Graph">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the file attachment icon type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteContent" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the content of the attached note.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteHeading" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the title of the attached note.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NoteIconType" type="NoteIconTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the note icon type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IconColor" type="xsd:string" use="optional" default="black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the icon. For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsNoteOpen" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the note is open or not when the Pdf document is opened.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the note.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraph" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFirstParagraphInColumn" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the paragraph is the first paragraph of a column.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptTogether" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether all lines in the paragraph are to remain on the same page. Default is false. This property only affects paragraphs in section (but ont in table).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOnOddPage" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether this paragraph be shown in odd page only. This property used for duplex Printing. If you want to print a paragraph in a new odd page in duplex Printing,you can set "IsFirstParagraph = true" and "IsOnOddPage = true".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="RadioButtonType" mixed="true">
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ButtonWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the radiobutton. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ButtonHeight" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the height of the radiobutton. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin.The default unit is point, but cm and inch are also  supported. For example,MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin.The default unit is point, but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin.The default unit is point, but cm and inch are also  supported. For example, MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="FormFieldType" mixed="true">
    <xsd:sequence>
      <xsd:element name="RadioButton" type="RadioButtonType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a radiobutton item in a radiobutton field.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ChoiceOption" type="ChoiceOptionType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a choice option item for a combo or list field.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the form field.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the paragraph. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the paragraph. The top position means the distance between the paragraph and the page's top edge.The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FormWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the form. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FormHeight" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the height of the form. The default unit is point, but cm and inch are also supported. The property is used for custom positioning of the note's popup window. You need not use this property if you want the note's popup window be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PositioningType" type="PositioningTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the positioning type when using custom positioning. Default is "Auto" which means custom positioning is not used.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative custom positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ChoiceSelections" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string consists of a int array that indicates the choice selection indexes, e.g., If items 2 and 4 are selected, it should be ChoiceSelections="2 4" </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph top margin.The default unit is point, but cm and inch are also  supported. For example, MarginTop="2cm" or MarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph bottom margin.The default unit is point, but cm and inch are also  supported. For example, MarginBottom="2cm" or MarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph left margin.The default unit is point, but cm and inch are also  supported. For example, MarginLeft="2cm" or MarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the paragraph right margin.The default unit is point, but cm and inch are also  supported. For example, MarginRight="2cm" or MarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FormFieldType" type="FormFieldTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the formfield type. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FieldName" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of the formfield. Note that each field MUST have a unique name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FieldValue" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the value of the formfield.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ComboIsEditable" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the combo is editable.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsReadOnly" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the field is readonly.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsMultiSelect" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if multi-selecting is allowed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ChoiceOptions" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string list that indicates the options of combo or list field. For example, "red green blue". NOTE: This attribute is obsolete. Please use the 'ChoiceOption' element.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TopIndex" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A non-negative integer number that indicates the index (in the options list) of combo or list.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CheckBoxIsChecked" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>a bool value that indicates whether the checkbox is checked. Default is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextFontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font name of the text field. The core fonts (Courier,Courier-Bold,Courier-BoldOblique,Courier-Oblique,Helvetica,Helvetica-Bold,Helvetica-BoldOblique, Helvetica-Oblique,Symbol,Times-Bold,Times-BoldItalic,Times-Italic,Times-Roman and ZapfDingbats) and Truetype fonts are supported. When using Truetype font, you should use the font family name. If you want the font be bold or italic, set the font name like "Arial,Bold","Arial,Italic" or "Arial,BoldItalic".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the text field. Only RGB color is supported. The string can be the name of the color or the RGB value. R,G abd B should be a value between 0 and 255. For example "Red" or "255 0 0".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the background. Only RGB color is supported. The string can be the name of the color or the RGB value. R,G abd B should be a value between 0 and 255. For example "Red" or "255 0 0".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BorderColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the border. Only RGB color is supported. The string can be the name of the color or the RGB value. R,G abd B should be a value between 0 and 255. For example "Red" or "255 0 0".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ButtonColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the button. Only RGB color is supported. The string can be the name of the color or the RGB value. R,G and B should be a value between 0 and 255. For example "Red" or "255 0 0".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextIsMultiLine" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text field can be multiline. Default is true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextIsPassword" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text field is password. If set to true, the field is intended for entering a secure password that should not be echoed visibly to the screen. Default value is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextMaxLength" type="xsd:nonNegativeInteger" use="optional" default="500">
      <xsd:annotation>
        <xsd:documentation>A non-negative int number that indicates the max length of the text can be entered in this field.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RadioButtonCheckedIndex" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A non-negative int number that indicates the index of the radiobutton that has been checked.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBordered" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the field is bordered. Default value is false.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextFontSize" type="xsd:float" use="optional" default="14">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the font size of the text field. Default is 14 points.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ChoiceOptionType">
  </xsd:complexType>
  <xsd:complexType name="FloatingBoxType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Border" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the border of the floating box.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a text paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Graph" type="GraphType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a graph paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a image paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Attachment" type="AttachmentType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a attachment paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FormField" type="FormFieldType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a formfield paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a table paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Heading" type="HeadingType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a heading paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FloatingBox" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a floating box paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <!--Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="IsNeedRepeating" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Gets or sets a bool value that indicates whether the floatingbox need to be repeated when the pdf is broken across pages. Default value is false. The attribute is only valid when the floatingbox itself and the object its ReferenceParagraphID referred to both are included in RepeatingRows.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!--End of Added by emil 20081022 for PDFNET-6190-->
    <xsd:attribute name="ZIndex" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>A int value that indicates the Z-order of the floating box. A floating box with larger ZIndex will be placed over the floating box with smaller ZIndex. ZIndex can be negative. Floating box with negative ZIndex will be placed behind the text in the page.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BoxVerticalAlignment" type="BoxVerticalAlignmentTypeEnum" use="optional" default="None">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical alignment type of the floating box.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BoxHorizontalAlignment" type="BoxHorizontalAlignmentTypeEnum" use="optional" default="None">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the horizontal alignment type of the floating box.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BoxVerticalPositioning" type="BoxVerticalPositioningTypeEnum" use="optional" default="Margin">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical positioning type of the floating box.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BoxHorizontalPositioning" type="BoxHorizontalPositioningTypeEnum" use="optional" default="Margin">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the horizontal positioning type of the floating box.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TextVerticalAlignment" type="VerticalAlignmentTypeEnum" use="optional" default="Top">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the vertical alignment type of all paragraphs in the floating box. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingTop" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top padding of the floating box. The default unit is point, but cm and inch are also  supported. For example, PaddingTop="2cm" or PaddingTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingBottom" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the bottom padding of the floating box. The default unit is point, but cm and inch are also  supported. For example,PaddingBottom="2cm" or PaddingBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingLeft" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left padding of the floating box. The default unit is point, but cm and inch are also  supported. For example, PaddingLeft="2cm" or PaddingLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PaddingRight" type="xsd:string" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the right padding of the floating box. The default unit is point, but cm and inch are also  supported. For example, PaddingRight="2cm" or PaddingRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the floating box.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the floating box. The default unit is point, but cm and inch are also supported. The property is used when BoxHorizontalAlignment is set to "None".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the floating box. The default unit is point, but cm and inch are also supported. The property is used when BoxVerticalAlignment is set to "None".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Width" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the floating box. The default unit is point, but cm and inch are also supported.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Height" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the height of the floating box. The default unit is point, but cm and inch are also supported.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFixedHeight" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the box's height is fixed. The default value is false. It will be enlarged automatically if the height is set too small. Otherwise(true), the box's height is fixed and text exceed the height will be cut.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RotationAngle" type="VerticalRotationAngleTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the rotation angle of the texts in floating box. The unit is degree.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ReferenceParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the reference paragraph when using paragraph relative horizontal positioning. The reference paragraph must be ahead of the current paragraph in the document object model.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the floating box.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="CanvasType" mixed="true">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Border" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the border of the canvas.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FloatingBox" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a floating box paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="FillColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the canvas.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Width" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the width of the canvas. The default unit is point, but cm and inch are also supported.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Height" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the height of the canvas. The default unit is point, but cm and inch are also supported.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the canvas.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsKeptWithNext" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether current paragraph remains in the same page along with next paragraph.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ListLevelFormatType">
    <xsd:choice>
      <xsd:element name="TextInfo" type="TextInfoType" minOccurs="0" />
    </xsd:choice>
    <xsd:attribute name="Level" type="xsd:positiveInteger" use="required">
      <xsd:annotation>
        <xsd:documentation>A positive value indicates the current level of the ListLevelFormat. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="SubsequentLinesIndent" type="xsd:integer" use="optional" default="6">
      <xsd:annotation>
        <xsd:documentation>An integer value indicates how many chars are indented for the subsequent lines in the list item. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TabLeaderType" type="TabLeaderTypeEnum" use="optional" default="Dot">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the tab leader type for the list. The default value is "Dot" </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="LeftMargin" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) indicates left margin of list item. NOTE: This attribute is now obsolete. Please use MarginLeft instead. It will be removed 12 months later since release 3.3.1.0 in January 2007. Aspose apologizes for any inconvenience you may have experienced.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginLeft" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) indicates left margin of list item. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginRight" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) indicates right margin of list item. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginTop" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) indicates top margin of list item. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MarginBottom" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) indicates bottom margin of list item. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="TextInfoType">
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional" default="Left" />
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the border. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:float" use="optional" />
    <xsd:attribute name="Color" type="xsd:string" use="optional" default="Black">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the border. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>sets a string that indicates the name of custom AFM font file. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional" default="Times-Roman">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the text font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="12">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBaseline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is baseline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the text is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false" />
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false" />
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional" default="false" />
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false" />
    <xsd:attribute name="LineSpacing" type="xsd:float" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the spacing between two text lines. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the text. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional" default="0">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ListSectionType">
    <xsd:choice>
      <xsd:element name="Title" type="TextType">
        <xsd:annotation>
          <xsd:documentation>Represents the title of the list section.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ListLevelFormat" type="ListLevelFormatType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents the format for specified level of the list section.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PageBorder" type="BorderType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents the page border of the section.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Header" type="HeaderFooterType" minOccurs="0" maxOccurs="4">
        <xsd:annotation>
          <xsd:documentation>Represents  header  of a page in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Footer" type="HeaderFooterType" minOccurs="0" maxOccurs="4">
        <xsd:annotation>
          <xsd:documentation>Represents  footer of a page in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a text paragraph in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Graph" type="GraphType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a graph Paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a table Paragraph in a Pdf document.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a image paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FloatingBox" type="FloatingBoxType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a floating box paragraph.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="ListType" type="ListTypeEnum" use="required">
      <xsd:annotation>
        <xsd:documentation>Represents a string that indicates the type of the list section.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsCaptionLabelNeeded" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>Represents a bool value that indicates whether caption label is needed in TOC.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional" default="white">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the section. For example, "Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180" It overloads the BackgroundColor set in Pdf. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageSize" type="PageSizeTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page size. The default unit is point, but cm and inch are also  supported. For example, PageWidth="20cm" or PageWidth="5inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page width. The default unit is point, but cm and inch are also  supported. For example, PageWidth="20cm" or PageWidth="5inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageHeight" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page height. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginTop" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page top margin. The default unit is point, but cm and inch are also  supported. For example, PageMarginTop="2cm" or PageMarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginBottom" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page bottom margin. The default unit is point, but cm and inch are also  supported. For example, PageMarginBottom="2cm" or PageMarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginLeft" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page left margin. The default unit is point, but cm and inch are also  supported. For example, PageMarginLeft="2cm" or PageMarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageMarginRight" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the page right margin. The default unit is point, but cm and inch are also  supported. For example, PageMarginRight="2cm" or PageMarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginTop" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the top page border and the top page edge. The default value is half of the page top margin. The default unit is point, but cm and inch are also  supported. For example, PageBorderMarginTop="2cm" or PageBorderMarginTop="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginBottom" type="xsd:string" use="optional" default="72">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the bottom page border and the bottom page edge. The default value is half of the page bottom margin. The default unit is point, but cm and inch are also supported. For example, PageBorderMarginBottom="2cm" or PageBorderMarginBottom="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginLeft" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the left page border and the left page edge. The default value is half of the page left margin. The default unit is point,but cm and inch are also  supported. For example, PageBorderMarginLeft="2cm" or PageBorderMarginLeft="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageBorderMarginRight" type="xsd:string" use="optional" default="90">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the margin between the right page border and the right page edge. The default value is half of the page right margin. The default unit is point,but cm and inch are also  supported. For example, PageBorderMarginRight="2cm" or PageBorderMarginRight="2inch".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundImageFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background image file name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundImageType" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the type of the background image.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundImageFixedWidth" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the fixed width of the background image. If this property is not set, the real image size will be used as page size.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsBackgroundImageBlackWhite" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Gets or sets a bool value that indicates whether the background image is forced to be black-and-white. If black-and-white TIFF image of CCITT subformat is used, this property must be set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsLandscape" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>a bool value that indicates whether the page orientation is landscape. The default is false, which means portrait.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ChoiceOption">
  </xsd:complexType>
  <xsd:complexType name="FootNoteType">
    <xsd:choice maxOccurs="unbounded">
      <!--Begin: Added by Emil for PDFNET-6920 2009-08-01-->
      <xsd:element name="Segment" type="SegmentType">
        <xsd:annotation>
          <xsd:documentation>Represents a segment in a Footnote.Note that segment object will be replaced by text in one year later.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Text" type="TextType">
        <xsd:annotation>
          <xsd:documentation>Represents a text in a Footnote.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType">
        <xsd:annotation>
          <xsd:documentation>Represents a table in a Footnote.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType">
        <xsd:annotation>
          <xsd:documentation>Represents a image in a Footnote.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <!--End: Added by Emil for PDFNET-6920 2009-08-01-->
    </xsd:choice>
    <xsd:attribute name="NumberingContinuation" type="NumberingContinuationTypeEnum" use="optional" default="ContinuationInDocument">
      <xsd:annotation>
        <xsd:documentation>the value indicates the numbering continuation. The default value is ContinuationInDocument.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NumberingFormat" type="NumberingFormatTypeEnum" use="optional" default="Arab">
      <xsd:annotation>
        <xsd:documentation>the value indicates the numbering format. The default value is Arab format.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the footnote. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the footnote. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRightToLeft" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the chars in right-to-left aligned. This attribute is used for right-to-left aligned language such as Arabic and Hebrew.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the footnote font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be choosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.
This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="7">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the footnote alignment mode. It can be "Left","Center","Right","Justify" or "FullJustify".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the footnote is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the footnote is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the footnote is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words. The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the footnote. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the footnote. For example, "Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the footnote.For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="EndNoteType">
    <xsd:choice maxOccurs="unbounded">
      <!--Begin: Added by Emil for PDFNET-6920 2009-08-01-->
      <xsd:element name="Segment" type="SegmentType">
        <xsd:annotation>
          <xsd:documentation>Represents a segment in a Endnote.Note that segment object will be replaced by text in one year later.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Text" type="TextType">
        <xsd:annotation>
          <xsd:documentation>Represents a text in a Endnote.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Table" type="TableType">
        <xsd:annotation>
          <xsd:documentation>Represents a table in a Endnote.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Image" type="ImageType">
        <xsd:annotation>
          <xsd:documentation>Represents a image in a Endnote.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <!--End: Added by Emil for PDFNET-6920 2009-08-01-->
    </xsd:choice>
    <xsd:attribute name="NumberingContinuation" type="NumberingContinuationTypeEnum" use="optional" default="ContinuationInDocument">
      <xsd:annotation>
        <xsd:documentation>the value indicates the numbering continuation. The default value is ContinuationInDocument. Please NOTE that ContinuationInPage is not suitable for EndNote</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="NumberingFormat" type="NumberingFormatTypeEnum" use="optional" default="Arab">
      <xsd:annotation>
        <xsd:documentation>the value indicates the numbering format. The default value is Arab format.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="EndNotePositioning" type="EndNotePositioningTypeEnum" use="optional" default="EndOfSection">
      <xsd:annotation>
        <xsd:documentation>the value indicates the position of endnote. The default value is EndOfSection.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Left" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the left position of the footnote. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Top" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates the top position of the footnote. The top position means the distance between the paragraph and the page's top edge. The default unit is point, but cm and inch are also supported. The property is used for custom positioning. You need not use this property if you want the paragraph be auto aligned.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsRightToLeft" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the chars in right-to-left aligned. This attribute is used for right-to-left aligned language such as Arabic and Hebrew.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the footnote font name. When using TrueType fonts, it's the Family Name when you double click the TrueType font in the Fonts of the Control Panel, instead of the Full Name displayed at the first line. Generally each TrueType font has two versions: Bold and Italic, which can be chosen by setting IsTrueTypeFontBold and IsTrueTypeFontItalic attribute. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnicode" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the font is unicode.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TruetypeFontFileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the truetype font file name. This attribute is only needed when using truetype font unicode.
				</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontAfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom AFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontPfmFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom PFM font file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontOutlineFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of custom font outline file. Font outline file is needed when embedding custom PostScript font into PDF files.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncodingFile" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the name of font encoding file. Font encoding files are available at "http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/" and "http://www.unicode.org/Public/MAPPINGS/ISO8859/". The font encoding name is same as the encoding file name. For example, the encoding file is 'cp1250.txt' and the encoding name is  'cp1250';the encoding file is '8859-1.TXT' and the encoding name is '8859-1'.
This attribute is valid for custom PostScript fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontBold" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is bold. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsTrueTypeFontItalic" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the TrueType font is italic. This attribute is valid for TrueType fonts only.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontSize" type="xsd:float" use="optional" default="7">
      <xsd:annotation>
        <xsd:documentation>A float number (culture-neutral format) that indicates the size of font.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FontEncoding" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the font encoding name.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsFontEmbedded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates if the font is embedded.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Alignment" type="TextAlignmentTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the footnote alignment mode. It can be "Left","Center","Right","Justify" or "FullJustify".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsUnderline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the footnote is with underline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsOverline" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the footnote is with overline.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsStrikeOut" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the footnote is with strikeout.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="CharSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between characters.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WordSpace" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float value (culture-neutral format) that indicates space between words.The unit is point.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="RenderingMode" type="RenderingModeEnum" use="optional" default="FillText">
      <xsd:annotation>
        <xsd:documentation>An string that indicates the rendering mode of the footnote. </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Color" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the color of the footnote. For example, "Red", "rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="BackgroundColor" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the background color of the footnote.For example,"Red","rgb 0 128 128","cmyk 0 128 0 64","gray 180".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="ListTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the three types of ListSection.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TableOfContents" />
      <xsd:enumeration value="ListOfFigures" />
      <xsd:enumeration value="ListOfTables" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VerticalRotationAngleTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the rotation angle in cell or floatingBox.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="ClockWise" />
      <xsd:enumeration value="AntiClockWise" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TextAlignmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the text alignment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Center" />
      <xsd:enumeration value="Left" />
      <xsd:enumeration value="Right" />
      <xsd:enumeration value="Justify" />
      <xsd:enumeration value="FullJustify" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PdfConformanceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of PDF conformance types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="PdfA1B" />
      <xsd:enumeration value="PdfA1A" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AlignmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the alignment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Center" />
      <xsd:enumeration value="Left" />
      <xsd:enumeration value="Right" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AttachmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the attachment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="File" />
      <xsd:enumeration value="Note" />
    </xsd:restriction>
  </xsd:simpleType>
  <!--modified by alex for MirrorMargin at 2009-5-31-->
  <xsd:simpleType name="GutterPlacementTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the gutter placement types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Top" />
      <xsd:enumeration value="Left" />
      <xsd:enumeration value="Right" />
      <xsd:enumeration value="Inner" />
      <xsd:enumeration value="Outer" />
    </xsd:restriction>
  </xsd:simpleType>
  <!--end of modified by alex for MirrorMargin at 2009-5-31-->
  <xsd:simpleType name="BorderStyleTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the border styles.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Normal" />
      <xsd:enumeration value="Double" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxHorizontalAlignmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the floating box horizontal alignment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Left" />
      <xsd:enumeration value="Center" />
      <xsd:enumeration value="Right" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxHorizontalPositioningTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the floating box horizontal positioning types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Margin" />
      <xsd:enumeration value="Page" />
      <xsd:enumeration value="Column" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxVerticalAlignmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the floating box vertical alignment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Top" />
      <xsd:enumeration value="Center" />
      <xsd:enumeration value="Bottom" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxVerticalPositioningTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the floating box vertical positioning types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Margin" />
      <xsd:enumeration value="Page" />
      <xsd:enumeration value="Paragraph" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CcittSubFormatTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the CCITT subformat types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Group31D" />
      <xsd:enumeration value="Group32D" />
      <xsd:enumeration value="Group4" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DestinationTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the destination types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Retain" />
      <xsd:enumeration value="FitPage" />
      <xsd:enumeration value="FitWidth" />
      <xsd:enumeration value="FitHeight" />
      <xsd:enumeration value="FitBox" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FileIconTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the file icon types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Graph" />
      <xsd:enumeration value="PaperClip" />
      <xsd:enumeration value="PushPin" />
      <xsd:enumeration value="Tag" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FormFieldTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the form field types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RadioButton" />
      <xsd:enumeration value="List" />
      <xsd:enumeration value="CheckBox" />
      <xsd:enumeration value="Combo" />
      <xsd:enumeration value="Text" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HeaderFooterTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the header or footer types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Both" />
      <xsd:enumeration value="Even" />
      <xsd:enumeration value="Odd" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HeadingTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the number styles of the heading.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Arab" />
      <xsd:enumeration value="RomanUpper" />
      <xsd:enumeration value="RomanLower" />
      <xsd:enumeration value="EnglishUpper" />
      <xsd:enumeration value="EnglishLower" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HyperlinkTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the hyperlink types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="File" />
      <xsd:enumeration value="Local" />
      <xsd:enumeration value="Pdf" />
      <xsd:enumeration value="Web" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ImageTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the image types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Ccitt" />
      <xsd:enumeration value="Gif" />
      <xsd:enumeration value="Jpeg" />
      <xsd:enumeration value="Png" />
      <xsd:enumeration value="Tiff" />
      <xsd:enumeration value="Bmp" />
      <xsd:enumeration value="Emf" />
      <xsd:enumeration value="Exif" />
      <xsd:enumeration value="Icon" />
      <xsd:enumeration value="Wmf" />
      <xsd:enumeration value="MemoryBmp" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ImageOpenTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the image open types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="File" />
      <xsd:enumeration value="Memory" />
      <xsd:enumeration value="Url" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PdfOpenTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the pdf open types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Auto" />
      <xsd:enumeration value="Bookmarks" />
      <xsd:enumeration value="Thumbnails" />
      <xsd:enumeration value="FullScreen" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NoteIconTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the note icon types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Comment" />
      <xsd:enumeration value="Insert" />
      <xsd:enumeration value="Paragraph" />
      <xsd:enumeration value="Note" />
      <xsd:enumeration value="NewParagraph" />
      <xsd:enumeration value="Key" />
      <xsd:enumeration value="Help" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NoteWindowPositioningTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of positioning types for note's popup window.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Auto" />
      <xsd:enumeration value="Absolute" />
      <xsd:enumeration value="NoteRelative" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageTransitionTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of page transition effects when revealing the new page.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Split" />
      <xsd:enumeration value="Blinds" />
      <xsd:enumeration value="Box" />
      <xsd:enumeration value="Wipe" />
      <xsd:enumeration value="Dissolve" />
      <xsd:enumeration value="Glitter" />
      <xsd:enumeration value="Replace" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PositioningTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the positioning types when using custom positioning. Custom positioning means customer specify the position of paragraph instead of render automatically. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Auto" />
      <xsd:enumeration value="PageRelative" />
      <xsd:enumeration value="ColumnRelative" />
      <xsd:enumeration value="ParagraphRelative" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RenderingModeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of text rendering modes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FillText" />
      <xsd:enumeration value="StrokeText" />
      <xsd:enumeration value="FillStrokeText" />
      <xsd:enumeration value="InvisibleText" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TabAlignmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of types of custom tab stops.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Left" />
      <xsd:enumeration value="Center" />
      <xsd:enumeration value="Right" />
      <xsd:enumeration value="Decimal" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TabLeaderTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of tab leader types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Solid" />
      <xsd:enumeration value="Dash" />
      <xsd:enumeration value="Dot" />
      <xsd:enumeration value="None" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VerticalAlignmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of vertical alignment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Top" />
      <xsd:enumeration value="Center" />
      <xsd:enumeration value="Bottom" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageSizeTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of vertical alignment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A0" />
      <xsd:enumeration value="A1" />
      <xsd:enumeration value="A2" />
      <xsd:enumeration value="A3" />
      <xsd:enumeration value="A4" />
      <xsd:enumeration value="A5" />
      <xsd:enumeration value="A6" />
      <xsd:enumeration value="B5" />
      <xsd:enumeration value="Letter" />
      <xsd:enumeration value="Legal" />
      <xsd:enumeration value="Ledger" />
      <xsd:enumeration value="P11x17" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ColumnAdjustmentTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of column adjustment types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AutoFitToContent" />
      <xsd:enumeration value="AutoFitToWindow" />
      <xsd:enumeration value="Customized" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NumberingContinuationTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of footnote or endnote numbering continuation types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ContinuationInDocument" />
      <xsd:enumeration value="ContinuationInSection" />
      <xsd:enumeration value="ContinuationInPage" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NumberingFormatTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of footnote or endnote numbering format types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Arab" />
      <xsd:enumeration value="RomanUpper" />
      <xsd:enumeration value="RomanLower" />
      <xsd:enumeration value="EnglishUpper" />
      <xsd:enumeration value="EnglishLower" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EndNotePositioningTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of endnote position types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EndOfSection" />
      <xsd:enumeration value="EndOfDoc" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RSItemTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of reporting services item types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Table" />
      <xsd:enumeration value="Matrix" />
      <xsd:enumeration value="TextBox" />
      <xsd:enumeration value="List" />
      <xsd:enumeration value="Rectangle" />
      <xsd:enumeration value="SubReport" />
      <xsd:enumeration value="Image" />
      <xsd:enumeration value="Chart" />
      <xsd:enumeration value="GaugePanel" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageNumberFormatEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of the page number format types.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Arab" />
      <xsd:enumeration value="RomanUpper" />
      <xsd:enumeration value="RomanLower" />
      <xsd:enumeration value="EnglishUpper" />
      <xsd:enumeration value="EnglishLower" />
    </xsd:restriction>
  </xsd:simpleType>
  <!--Added by Tommy for PDFNET-5010 LinkAction 20080514-->
  <xsd:simpleType name="MenuItemTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Represents the enumeration of menu item types when executing a menu item in link action.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FileOrganizerOpenOrganizer" />
      <xsd:enumeration value="FileCreatePDFFromScanner" />
      <xsd:enumeration value="FileCreatePDFFromWebPage" />
      <xsd:enumeration value="FileSaveAs" />
      <xsd:enumeration value="FileSaveCopy" />
      <xsd:enumeration value="FileAttachToEmail" />
      <xsd:enumeration value="FileClose" />
      <xsd:enumeration value="FileProperties" />
      <xsd:enumeration value="FilePrintSetup" />
      <xsd:enumeration value="FilePrint" />
      <xsd:enumeration value="FileExit" />
      <xsd:enumeration value="EditCheckSpelling" />
      <xsd:enumeration value="EditFind" />
      <xsd:enumeration value="EditSearch" />
      <xsd:enumeration value="EditPreferences" />
      <xsd:enumeration value="ViewGoToFirstPage" />
      <xsd:enumeration value="ViewGoToPreviousPage" />
      <xsd:enumeration value="ViewGoToNextPage" />
      <xsd:enumeration value="ViewGoToLastPage" />
      <xsd:enumeration value="ViewGoToPage" />
      <xsd:enumeration value="ViewGoToPreviousView" />
      <xsd:enumeration value="ViewGoToNextView" />
      <xsd:enumeration value="ViewZoomZoomTo" />
      <xsd:enumeration value="ViewZoomActualSize" />
      <xsd:enumeration value="ViewZoomFitPage" />
      <xsd:enumeration value="ViewZoomFitWidth" />
      <xsd:enumeration value="ViewZoomFitHeight" />
      <xsd:enumeration value="ViewZoomFitVisible" />
      <xsd:enumeration value="ViewPageDisplaySinglePage" />
      <xsd:enumeration value="ViewPageDisplaySinglePageContinuous" />
      <xsd:enumeration value="ViewPageDisplayTwoUp" />
      <xsd:enumeration value="ViewPageDisplayTwoUpContinuous" />
      <xsd:enumeration value="ViewToolBarsAdvancedEditing" />
      <xsd:enumeration value="ViewToolBarsCommentMarkup" />
      <xsd:enumeration value="ViewToolBarsEdit" />
      <xsd:enumeration value="ViewToolBarsFile" />
      <xsd:enumeration value="ViewToolBarsFind" />
      <xsd:enumeration value="ViewToolBarsForms" />
      <xsd:enumeration value="ViewToolBarsMeasuring" />
      <xsd:enumeration value="ViewToolBarsObjectData" />
      <xsd:enumeration value="ViewToolBarsPageDisplay" />
      <xsd:enumeration value="ViewToolBarsPageNavigation" />
      <xsd:enumeration value="ViewToolBarsPrintProduction" />
      <xsd:enumeration value="ViewToolBarsRedAction" />
      <xsd:enumeration value="ViewToolBarsSelectZoom" />
      <xsd:enumeration value="ViewToolBarsTasks" />
      <xsd:enumeration value="ViewToolBarsTypewriter" />
      <xsd:enumeration value="ViewToolBarsPropertiesBar" />
      <xsd:enumeration value="ViewNavigationPanelsArticles" />
      <xsd:enumeration value="ViewNavigationPanelsAttachments" />
      <xsd:enumeration value="ViewNavigationPanelsBookmarks" />
      <xsd:enumeration value="ViewNavigationPanelsComments" />
      <xsd:enumeration value="ViewNavigationPanelsFields" />
      <xsd:enumeration value="ViewNavigationPanelsLayers" />
      <xsd:enumeration value="ViewNavigationPanelsModelTree" />
      <xsd:enumeration value="ViewNavigationPanelsPages" />
      <xsd:enumeration value="ViewNavigationPanelsSignatures" />
      <xsd:enumeration value="DocumentInsertPages" />
      <xsd:enumeration value="DocumentExtractPages" />
      <xsd:enumeration value="DocumentDeletePages" />
      <xsd:enumeration value="DocumentCropPages" />
      <xsd:enumeration value="DocumentRotatePages" />
      <xsd:enumeration value="DocumentAttachFile" />
      <xsd:enumeration value="WindowFullScreenMode" />
      <xsd:enumeration value="BookmarksExpandCurrentBookmark" />
      <xsd:enumeration value="BookmarksHighlightCurrentBookmark" />
      <xsd:enumeration value="PageImagesPrintPages" />
      <xsd:enumeration value="MiscellaneousZoomIn" />
      <xsd:enumeration value="MiscellaneousZoomOut" />
    </xsd:restriction>
  </xsd:simpleType>
  <!--Added by Tommy 20080527 for PDFNET-5009 bookmarks at specific points-->
  <xsd:complexType name="BookmarkType" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Bookmarks" type="BookmarksType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Represents child bookmarks.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="LinkParagraphID" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the ID of the paragraph that the bookmark item links to. If this property is set, the 'PageNumber' and 'YPosition' properties are not needed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="Title" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the title of the bookmark. If the 'LinkParagraphID' is set and the linked paragraph is 'Text' or 'Heading' and this attribute is not set, the content of the 'Text' or 'Heading' will be used as the title of the bookmark item.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PageNumber" type="xsd:nonNegativeInteger" use="optional">
      <xsd:annotation>
        <xsd:documentation>An integer number that indicates the page number of the bookmark link. If the 'LinkParagraphID' is set, this attribute is not needed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="YPosition" type="xsd:float" use="optional">
      <xsd:annotation>
        <xsd:documentation>A float number that indicates the Y coordination of the bookmark link. The origin of  the coordination is the lower-left corner of the page. If the 'LinkParagraphID' is set, this property is not needed.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="IsExpanded" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>A bool value that indicates whether the bookmark item is expanded if it has child bookmarks.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="MenuItems" type="MenuItemTypeEnum" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the menu item type when setting ExcuteMenuItem link actions. If there are more than one actions, separate them by a blank like 'ViewZoomFitWidth ViewGoToPage'.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="WebUrl" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the web URL when setting OpenWebLink link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="FileName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>A string that indicates the file name when setting OpenFile link actions.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="BookmarksType" mixed="true">
    <xsd:sequence>
      <xsd:element name="Bookmark" type="BookmarkType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a bookmark item</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>